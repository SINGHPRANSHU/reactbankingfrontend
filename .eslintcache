[{"C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\index.js":"1","C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\reportWebVitals.js":"2","C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\App.js":"3","C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\page\\home.js":"4","C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\page\\transferto.js":"5","C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\page\\viewallcustomers.js":"6","C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\components\\navbar.js":"7","C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\context\\usersinfo.js":"8","C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\context\\transactioninfo.js":"9","C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\page\\transactions.js":"10","C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\page\\stocks.js":"11","C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\components\\graph.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":2239,"mtime":1622005668767,"results":"16","hashOfConfig":"14"},{"size":2424,"mtime":1622044522197,"results":"17","hashOfConfig":"14"},{"size":6251,"mtime":1610903031516,"results":"18","hashOfConfig":"14"},{"size":1821,"mtime":1610981966369,"results":"19","hashOfConfig":"14"},{"size":1953,"mtime":1622005724317,"results":"20","hashOfConfig":"14"},{"size":342,"mtime":1609828938002,"results":"21","hashOfConfig":"14"},{"size":380,"mtime":1609829182779,"results":"22","hashOfConfig":"14"},{"size":1239,"mtime":1610899546829,"results":"23","hashOfConfig":"14"},{"size":1119,"mtime":1622047146167,"results":"24","hashOfConfig":"14"},{"size":2548,"mtime":1622047027959,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1tkpskf",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\index.js",[],["55","56"],"C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\reportWebVitals.js",[],"C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\App.js",["57","58","59"],"\n\nimport React,{useEffect,useContext} from \"react\";\nimport {UserProvider} from \"./context/usersinfo\"\nimport {TransactionProvider} from \"./context/transactioninfo\"\nimport {UserContext} from \"./context/usersinfo\"\nimport {TransactionContext} from \"./context/transactioninfo\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Home from \"./page/home\";\nimport Viewall from \"./page/viewallcustomers\";\n\nimport TransferTO from \"./page/transferto\";\nimport  Transaction from \"./page/transactions\"\nimport  Stocks from \"./page/stocks\"\n\n\nimport Navbar from \"./components/navbar\";\n\n\n\n\nfunction Routing() {\n\n  let [customers,setCustomers] =useContext(UserContext);\n  let [transaction,setTransaction] =useContext(TransactionContext);\n\n  let fetchdata = ()=>{\n    fetch('https://transactionrest.herokuapp.com/api/customers', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    .then(response => response.json())\n    .then(data => {\n      setCustomers([...data])\n       \n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n\n    fetch('https://transactionrest.herokuapp.com/api/alltransaction', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    .then(response => response.json())\n    .then(data => {\n      setTransaction([...(data).reverse()])\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\n\nuseEffect(fetchdata,[]);\n  return (\n\n   \n    <Router>\n      <div>\n      \n      <Navbar />   \n\n        <Switch>\n          \n          <Route path=\"/viewall\">\n            <Viewall />\n          </Route>\n          <Route path=\"/transferto\">\n            <TransferTO />\n          </Route>\n          <Route path=\"/transactions\">\n            <Transaction />\n          </Route>\n          <Route path=\"/stocks\">\n            <Stocks />\n          </Route>\n          \n          <Route path=\"/\" exact={true}>\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nexport default function App() {\n  return (\n    <TransactionProvider>\n      <UserProvider>\n        <Routing/>\n      </UserProvider>\n    </TransactionProvider>\n   \n  );\n}\n\n\n\n\n\n","C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\page\\home.js",[],"C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\page\\transferto.js",["60","61"],"import {useState, useEffect,useContext } from \"react\";\r\nimport { useLocation,useHistory } from \"react-router-dom\";\r\nimport \"../components/componentscss/transferto.css\"\r\nimport {UserContext} from \"../context/usersinfo\"\r\nimport \"../components/componentscss/sendbutton.css\"\r\nimport \"../components/componentscss/declinebutton.css\"\r\n\r\n\r\n\r\nimport {TransactionContext} from \"../context/transactioninfo\"\r\n\r\n\r\n\r\n\r\nexport default function TransferTo() {\r\n  let [id,setId]=useState(\"\");\r\n  let [name,setName]=useState(\"\");\r\n  let [amount,setAmount]  = useState(1);\r\n  let [selected,setSelected] = useState(0);\r\n  let [comp,setComp] =useState(false);\r\n  let [err,setErr] =useState(false);\r\n  let [minerr,setMinerr] =useState(false);\r\n  let [selecterr,setSelecrerr] =useState(false);\r\n  let [loading,setLoading] = useState(\"\");\r\n  let [stringerr,setStringerr] = useState(false);\r\n\r\n  let [receivers,setReceivers]=useState([]);\r\n  let [customers,setCustomers] =useContext(UserContext);\r\n  let [transaction,setTransaction] =useContext(TransactionContext);\r\n  \r\n\r\n  \r\n\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  \r\n  const compare = (str1,str2)=>{\r\n   let result =str1.localeCompare(str2);\r\n   if(result===0){\r\n     return false\r\n   }else{\r\n     return true\r\n   }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!location.state){\r\n      history.push(\"/viewall\")\r\n      return\r\n    }\r\n    setId(location.state._id)\r\n    setName(location.state.name)\r\n    setReceivers(customers.filter(customer=>compare(customer._id,location.state._id)))\r\n }, [location]);\r\n  \r\n \r\n\r\n const handleChange = (e)=>{\r\n e.preventDefault();\r\n setSelected(e.target.value) \r\n setName()\r\n };\r\n\r\n\r\n const submitdata = (e)=>{\r\n  e.preventDefault()\r\n  setErr(false);\r\n  setMinerr(false);\r\n  setSelecrerr(false);\r\n  setComp(false)\r\n  if(typeof amount !== 'number'){\r\n    setStringerr(true);\r\n    setTimeout(() => {\r\n      setStringerr(false)\r\n    }, 2000);\r\n    return\r\n  }\r\n  \r\n  if(amount<=0){\r\n    setMinerr(true);\r\n    setTimeout(() => {\r\n      setMinerr(false)\r\n    }, 2000);\r\n    return\r\n  }\r\n  if(selected===0){\r\n    setSelecrerr(true);\r\n    setTimeout(() => {\r\n      setSelecrerr(false)\r\n    }, 2000);\r\n    return\r\n  }\r\n  setLoading(\"loader\")\r\n   const receiver = receivers.find(customer=>compare(customer._id,id));\r\n   const data ={\r\n    senderid:id,\r\n    sendername:name,\r\n    receivername:receiver.name,\r\n    balance:parseInt(amount),\r\n    receiverid:selected\r\n\r\n   }\r\n \r\n   \r\n   fetch('https://transactionrest.herokuapp.com/api/customer/update', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n  .then(response => response.json())\r\n  .then(result => {\r\n   \r\n   if(result.status){\r\n    setLoading(\"\")\r\n    setErr(true)\r\n    setTimeout(() => {\r\n      setErr(false)\r\n    }, 3000);\r\n   }else{\r\n    \r\n    setLoading(\"\")\r\n    setComp(true)\r\n    setTimeout(() => {\r\n     \r\n    setComp(false)\r\n     \r\n    }, 3000);\r\n\r\n    fetch('https://transactionrest.herokuapp.com/api/customers', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    .then(response => response.json())\r\n    .then(result =>{\r\n     setCustomers([...result])\r\n     })\r\n   .catch(error=>{console.log(error);})\r\n\r\n    \r\n   fetch('https://transactionrest.herokuapp.com/api/alltransaction', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  })\r\n  .then(response => response.json())\r\n  .then(result =>{\r\n   setTransaction([...(result).reverse()])\r\n   })\r\n .catch(error=>{console.log(error);})\r\n\r\n    \r\n    }\r\n    \r\n  })\r\n  .catch((error) => {\r\n    console.error('Error:', error);\r\n  });\r\n\r\n }\r\n    \r\n\r\n\r\n \r\n return (\r\n         \r\n         \r\n        <div className=\"transferdiv\">\r\n            <label for=\"fname\">From</label>\r\n            <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name..\" value={name}/>\r\n\r\n            <label for=\"lname\">Sender Id</label>\r\n            <input type=\"text\" id=\"lname\" name=\"id\" placeholder=\"Your Id\" value={id}/>\r\n           \r\n            <label for=\"lname\">Amount</label>\r\n            <input type=\"text\" id=\"lname\" name=\"amount\" placeholder=\"Enter amount\" value={amount} onChange={(e)=>setAmount(parseInt(e.target.value))}/>\r\n\r\n            <label for=\"transfer to\">Transfer To</label>\r\n            <select  name=\"receiver\" onChange={handleChange}  >\r\n                <option value={selected} >select to transfer</option>\r\n                  {receivers.map(customer=>(\r\n                    \r\n                      <option value={customer._id} >{customer.name}</option>\r\n                    \r\n                  ))}             \r\n            </select>\r\n            <div style={{display:\"flex\",flexDirection:\"row\"}} className=\"buttondiv\">\r\n              <div style={{width:\"50%\"}}>\r\n              <button className=\" button2\" onClick={()=>{history.push(\"/viewall\")}}>Decline</button>\r\n              </div>\r\n              <div style={{width:\"50%\"}}>\r\n              <button className=\"button1\" style={{float:\"right\"}} onClick={(e)=>submitdata(e)}>Transfer</button>\r\n              </div>\r\n            </div>\r\n            \r\n            {comp? <div style={{width:\"100%\"}}>\r\n        <h6 style={{display:\"flex\",justifyContent:\"center\",color:\"green\"}} >Money Transferred</h6>\r\n      </div>:<div></div>}\r\n            {stringerr? <div style={{width:\"100%\"}}>\r\n        <h6 style={{display:\"flex\",justifyContent:\"center\",color:\"red\"}} >Enter Valid Number</h6>\r\n      </div>:<div></div>}\r\n            {err? <div style={{width:\"100%\"}}>\r\n        <h6 style={{display:\"flex\",justifyContent:\"center\",color:\"red\"}} >Please Check Your Balance</h6>\r\n      </div>:<div></div>}\r\n            {minerr? <div style={{width:\"100%\"}}>\r\n        <h6 style={{display:\"flex\",justifyContent:\"center\",color:\"red\"}} >Send 1 Or More </h6>\r\n      </div>:<div></div>}\r\n            {selecterr? <div style={{width:\"100%\"}}>\r\n        <h6 style={{display:\"flex\",justifyContent:\"center\",color:\"red\"}} >Select Someone </h6>\r\n      </div>:<div></div>}\r\n      \r\n       <div style={{display:\"flex\",justifyContent:\"center\"}}>     \r\n         <div class={loading} ></div>\r\n      </div>   \r\n        </div>\r\n      \r\n      \r\n         );\r\n\r\n  }","C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\page\\viewallcustomers.js",["62","63"],"import {useEffect,useContext} from \"react\"\r\nimport \"../components/componentscss/transferbutton.css\"\r\nimport { useHistory } from 'react-router-dom';\r\nimport {UserContext} from \"../context/usersinfo\"\r\nimport \"../components/componentscss/viewall.css\"\r\n\r\nexport default function Viewall() {\r\n \r\n  let [customers,setCustomers] =useContext(UserContext);\r\n \r\n   \r\n    const history = useHistory();\r\n\r\n    \r\n\r\n    const handleClick = (_id,name) => {\r\n     \r\n     \r\n      history.push({pathname:\"/transferto\",search: '',state: { name,_id}});\r\n  }\r\n\r\n    \r\n\r\n    let list = customers.map(customer=>{\r\n      \r\n      return(\r\n      <div style={{display:\"flex\",flexDirection:\"row\",backgroundColor:\"#bbb\",margin:\"2em\",width:\"80%\",padding:\"1em\",border:\"6px solid grey\" }} key={customer._id} className=\"rootdiv\">\r\n        <div style={{display:\"flex\",flexDirection:\"column\",width:\"40%\"}}  > \r\n        <h4 style={{fontWeight:\"bolder\",float:\"left\"}}>Name</h4>\r\n        <h4 style={{fontWeight:\"bolder\"}}>Email</h4>\r\n        <h4 style={{fontWeight:\"bolder\"}}>CurBal</h4>\r\n       \r\n        </div>\r\n        <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"space-around\"}} >\r\n        <h4 style={{fontWeight:\"bolder\"}}>{customer.name}</h4>\r\n        <h4 style={{fontWeight:\"bolder\"}}>{customer.email}</h4>\r\n        <h4 style={{fontWeight:\"bolder\"}}>{customer.balance}</h4>\r\n        \r\n       \r\n        \r\n        \r\n        <button className=\"button button1\" onClick={()=>handleClick(customer._id,customer.name)}><span>Transfer</span></button>\r\n        </div>\r\n     \r\n      </div>\r\n    )});\r\n\r\n    return (\r\n    \r\n   \r\n     <div className=\"mediawidth\" style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",backgroundColor:\"#dff2f2\"}}>\r\n       {list}\r\n     </div>\r\n    \r\n    \r\n    \r\n    );\r\n  }\r\n ","C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\components\\navbar.js",[],"C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\context\\usersinfo.js",[],"C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\context\\transactioninfo.js",[],"C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\page\\transactions.js",["64"],"import {useContext} from \"react\";\r\n\r\nimport {TransactionContext} from \"../context/transactioninfo\"\r\n\r\nimport \"../components/componentscss/viewall.css\"\r\n\r\nexport default function Transaction(){\r\n\r\n    let [transaction,setTransaction] =useContext(TransactionContext);\r\n\r\n\r\n     const list =transaction.map(tran=> (\r\n            <tr key={tran._id}>\r\n              <td>{tran._id}</td>\r\n              <td>{tran.sendername}</td>\r\n              <td>{tran.senderid}</td>\r\n              <td>{tran.receivername}</td>\r\n              <td>{tran.receiverid}</td>\r\n              <td>{tran.balance}</td>\r\n              <td>{tran.time}</td>\r\n            </tr>))\r\n         \r\n     \r\n\r\n \r\n     \r\n     return (\r\n      <table className=\"customers\">\r\n          <tr key=\"0\">\r\n            <th style={{textAlign:\"center\"}}>transactionid</th>\r\n            <th style={{textAlign:\"center\"}}>sender</th>\r\n            <th style={{textAlign:\"center\"}}>senderid</th>\r\n            <th style={{textAlign:\"center\"}}>receiver</th>\r\n            <th style={{textAlign:\"center\"}}>receiverid</th>\r\n            <th style={{textAlign:\"center\"}}>transferred</th>\r\n            <th style={{textAlign:\"center\"}}>time</th>\r\n          </tr>\r\n        {list}\r\n      </table>  \r\n      )\r\n\r\n}","C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\page\\stocks.js",["65","66","67","68","69","70"],"C:\\Users\\pranshu\\Documents\\bankingfrontend\\src\\components\\graph.js",["71","72","73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":30,"column":8,"nodeType":"81","messageId":"82","endLine":30,"endColumn":17},{"ruleId":"79","severity":1,"message":"83","line":31,"column":8,"nodeType":"81","messageId":"82","endLine":31,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":65,"column":21,"nodeType":"86","endLine":65,"endColumn":23,"suggestions":"87"},{"ruleId":"79","severity":1,"message":"83","line":29,"column":8,"nodeType":"81","messageId":"82","endLine":29,"endColumn":19},{"ruleId":"84","severity":1,"message":"88","line":55,"column":5,"nodeType":"86","endLine":55,"endColumn":15,"suggestions":"89"},{"ruleId":"79","severity":1,"message":"90","line":1,"column":9,"nodeType":"81","messageId":"82","endLine":1,"endColumn":18},{"ruleId":"79","severity":1,"message":"91","line":9,"column":18,"nodeType":"81","messageId":"82","endLine":9,"endColumn":30},{"ruleId":"79","severity":1,"message":"92","line":9,"column":22,"nodeType":"81","messageId":"82","endLine":9,"endColumn":36},{"ruleId":"79","severity":1,"message":"93","line":6,"column":18,"nodeType":"81","messageId":"82","endLine":6,"endColumn":27},{"ruleId":"79","severity":1,"message":"94","line":7,"column":16,"nodeType":"81","messageId":"82","endLine":7,"endColumn":23},{"ruleId":"79","severity":1,"message":"95","line":8,"column":10,"nodeType":"81","messageId":"82","endLine":8,"endColumn":14},{"ruleId":"79","severity":1,"message":"96","line":8,"column":16,"nodeType":"81","messageId":"82","endLine":8,"endColumn":23},{"ruleId":"79","severity":1,"message":"97","line":9,"column":17,"nodeType":"81","messageId":"82","endLine":9,"endColumn":25},{"ruleId":"79","severity":1,"message":"98","line":10,"column":18,"nodeType":"81","messageId":"82","endLine":10,"endColumn":27},{"ruleId":"79","severity":1,"message":"99","line":1,"column":29,"nodeType":"81","messageId":"82","endLine":1,"endColumn":38},{"ruleId":"84","severity":1,"message":"100","line":58,"column":6,"nodeType":"86","endLine":58,"endColumn":8,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":68,"column":25,"nodeType":"104","endLine":68,"endColumn":167},{"ruleId":"102","severity":1,"message":"103","line":70,"column":24,"nodeType":"104","endLine":70,"endColumn":164},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'customers' is assigned a value but never used.","Identifier","unusedVar","'transaction' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setCustomers' and 'setTransaction'. Either include them or remove the dependency array.","ArrayExpression",["107"],"React Hook useEffect has missing dependencies: 'customers' and 'history'. Either include them or remove the dependency array.",["108"],"'useEffect' is defined but never used.","'setCustomers' is assigned a value but never used.","'setTransaction' is assigned a value but never used.","'setLabels' is assigned a value but never used.","'setData' is assigned a value but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.","'setColor' is assigned a value but never used.","'setStocks' is assigned a value but never used.","'createRef' is defined but never used.","React Hook useEffect has missing dependencies: 'color', 'data', 'labels', and 'text'. Either include them or remove the dependency array.",["109"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [setCustomers, setTransaction]",{"range":"116","text":"117"},"Update the dependencies array to be: [customers, history, location]",{"range":"118","text":"119"},"Update the dependencies array to be: [color, data, labels, text]",{"range":"120","text":"121"},[1497,1499],"[setCustomers, setTransaction]",[1542,1552],"[customers, history, location]",[1655,1657],"[color, data, labels, text]"]